@model PaginationViewModel<Book, BooksFilterViewModel, BooksSortViewModel>
@addTagHelper *, WebApplication3

@{
    ViewData["Title"] = "Записи";
}

<h1>Записи</h1>

<form method="get" class="mt-1">
    <label class="form-inline mt-1">ISBN: </label>
    <input type="text" class="form-control" name="isbn" value="@Model.FilterViewModel.Isbn" />

    <label class="form-inline mt-1">Название: </label>
    <input type="text" class="form-control" name="title" value="@Model.FilterViewModel.Title" />

    <label class="form-inline mt-1">Автор: </label>
    <input type="text" class="form-control" name="author" value="@Model.FilterViewModel.Author" />

    <label class="form-inline mt-1">Год издания: </label>
    <input type="text" class="form-control" name="publicationYear" value="@Model.FilterViewModel.PublicationYear" />

    <label class="form-inline mt-1">Издатель: </label>
    <select class="form-control" name="publisherId" asp-items="Model.FilterViewModel.Publishers"></select>

    <label class="form-inline mt-1">Жанр: </label>
    <select class="form-control" name="genreId" asp-items="Model.FilterViewModel.Genres"></select>

    <label class="form-inline mt-1">Цена: </label>
    <input type="text" class="form-control" name="price" value="@Model.FilterViewModel.Price" />

    <input type="submit" value="Фильтр" class="btn btn-primary mt-2" />
</form>

<p>
    <a asp-action="Create">Создать новую запись</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-page="@(Model.PageViewModel.PageNumber)"
                   asp-route-sortOrder="@(Model.SortViewModel.IsbnSort)"
                   asp-route-isbn="@(Model.FilterViewModel.Isbn)">
                    @Html.DisplayNameFor(model => model.Items.First().Isbn)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-page="@(Model.PageViewModel.PageNumber)"
                   asp-route-sortOrder="@(Model.SortViewModel.TitleSort)"
                   asp-route-title="@(Model.FilterViewModel.Title)">
                    @Html.DisplayNameFor(model => model.Items.First().Title)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-page="@(Model.PageViewModel.PageNumber)"
                   asp-route-sortOrder="@(Model.SortViewModel.AuthorSort)"
                   asp-route-author="@(Model.FilterViewModel.Author)">
                    @Html.DisplayNameFor(model => model.Items.First().Author)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-page="@(Model.PageViewModel.PageNumber)"
                   asp-route-sortOrder="@(Model.SortViewModel.PublicationYearSort)"
                   asp-route-publicationYear="@(Model.FilterViewModel.PublicationYear)">
                @Html.DisplayNameFor(model => model.Items.First().PublicationYear)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-page="@(Model.PageViewModel.PageNumber)"
                   asp-route-sortOrder="@(Model.SortViewModel.PriceSort)"
                   asp-route-price="@(Model.FilterViewModel.Price)">
                    @Html.DisplayNameFor(model => model.Items.First().Price)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-page="@(Model.PageViewModel.PageNumber)"
                   asp-route-sortOrder="@(Model.SortViewModel.GenreSort)"
                   asp-route-genreId="@(Model.FilterViewModel.GenreId)">
                    @Html.DisplayNameFor(model => model.Items.First().GenreId)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-page="@(Model.PageViewModel.PageNumber)"
                   asp-route-sortOrder="@(Model.SortViewModel.PublisherSort)"
                   asp-route-publisherId="@(Model.FilterViewModel.PublisherId)">
                    @Html.DisplayNameFor(model => model.Items.First().PublisherId)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Isbn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublicationYear)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Publisher.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.BookId">Изменить</a> |
                    <a asp-action="Details" asp-route-id="@item.BookId">Подробнее</a> |
                    <a asp-action="Delete" asp-route-id="@item.BookId">Удалить</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<page-link page-model="Model.PageViewModel" page-action="Index"
           page-url-isbn="@(Model.FilterViewModel.Isbn)"
           page-url-title="@(Model.FilterViewModel.Title)"
           page-url-author="@(Model.FilterViewModel.Author)"
           page-url-publisherId="@(Model.FilterViewModel.PublisherId)"
           page-url-genreId="@(Model.FilterViewModel.GenreId)"
           page-url-price="@(Model.FilterViewModel.Price)"
           page-url-sortOrder="@(Model.SortViewModel.Current)"></page-link>

